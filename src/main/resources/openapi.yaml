openapi: 3.0.1
info:
  contact: {}
  description: Api Documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  termsOfService: urn:tos
  title: Api Documentation
  version: "1.0"
servers:
- url: //localhost:8080/
tags:
- description: Auth Controller
  name: Auth
- description: Ads Controller
  name: Ads
- description: user Controller
  name: Users
paths:
  /ads:
    get:
      operationId: getALLAdsUsingGET
      responses:
        "200":
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseWrapperAds'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: getALLAds
      tags:
      - Ads
      x-accepts: '*/*'
    post:
      description: Добавить ads
      operationId: addAdsUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAds'
        description: createAds
        required: true
      responses:
        "200":
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Ads'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: addAds
      tags:
      - Ads
      x-codegen-request-body-name: createAds
      x-contentType: application/json
      x-accepts: '*/*'
  /ads/me:
    get:
      operationId: getAdsMeUsingGET
      parameters:
      - in: query
        name: authenticated
        schema:
          type: boolean
      - in: query
        name: authorities[0].authority
        schema:
          type: string
      - in: query
        name: credentials
        schema:
          type: object
      - in: query
        name: details
        schema:
          type: object
      - in: query
        name: principal
        schema:
          type: object
      responses:
        "200":
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseWrapperAds'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: getAdsMe
      tags:
      - Ads
      x-accepts: '*/*'
  /ads/{ad_pk}/comment:
    get:
      operationId: getAdsCommentsUsingGET
      parameters:
      - description: ad_pk
        in: path
        name: ad_pk
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseWrapperAdsComment'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: getAdsComments
      tags:
      - Ads
      x-accepts: '*/*'
    post:
      operationId: addAdsCommentsUsingPOST
      parameters:
      - description: ad_pk
        in: path
        name: ad_pk
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdsComment'
        description: comment
        required: true
      responses:
        "200":
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AdsComment'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: addAdsComments
      tags:
      - Ads
      x-codegen-request-body-name: comment
      x-contentType: application/json
      x-accepts: '*/*'
  /ads/{ad_pk}/comment/{id}:
    delete:
      operationId: deleteAdsCommentUsingDELETE
      parameters:
      - description: ad_pk
        in: path
        name: ad_pk
        required: true
        schema:
          type: string
      - description: id
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: deleteAdsComment
      tags:
      - Ads
      x-accepts: application/json
    get:
      operationId: getAdsCommentUsingGET
      parameters:
      - description: ad_pk
        in: path
        name: ad_pk
        required: true
        schema:
          type: string
      - description: id
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AdsComment'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: getAdsComment
      tags:
      - Ads
      x-accepts: '*/*'
    patch:
      operationId: updateAdsCommentUsingPATCH
      parameters:
      - description: ad_pk
        in: path
        name: ad_pk
        required: true
        schema:
          type: string
      - description: id
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdsComment'
        description: comment
        required: true
      responses:
        "200":
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AdsComment'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: updateAdsComment
      tags:
      - Ads
      x-codegen-request-body-name: comment
      x-contentType: application/json
      x-accepts: '*/*'
  /ads/{id}:
    delete:
      operationId: removeAdsUsingDELETE
      parameters:
      - description: id
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: removeAds
      tags:
      - Ads
      x-accepts: application/json
    get:
      operationId: getAdsUsingGET
      parameters:
      - description: id
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FullAds'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: getAds
      tags:
      - Ads
      x-accepts: '*/*'
    patch:
      operationId: updateAdsUsingPATCH
      parameters:
      - description: id
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ads'
        description: ads
        required: true
      responses:
        "200":
          content:
            application/json':
              schema:
                $ref: '#/components/schemas/Ads'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: updateAds
      tags:
      - Ads
      x-codegen-request-body-name: ads
      x-contentType: application/json
      x-accepts: '*/*'
  /login:
    post:
      operationId: loginUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginReq'
        description: req
        required: true
      responses:
        "200":
          content:
            'application/json':
              schema:
                type: object
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: login
      tags:
      - Auth
      x-codegen-request-body-name: req
      x-contentType: application/json
      x-accepts: '*/*'
  /register:
    post:
      operationId: registerUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegReq'
        description: req
        required: true
      responses:
        "200":
          content:
            'application/json':
              schema:
                type: object
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: register
      tags:
      - Auth
      x-codegen-request-body-name: req
      x-contentType: application/json
      x-accepts: '*/*'
  /users/me:
    get:
      operationId: getUsersUsingGET
      responses:
        "200":
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResponseWrapperUser'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: getUsers
      tags:
      - Users
      x-accepts: '*/*'
    patch:
      operationId: updateUserUsingPATCH
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: user
        required: true
      responses:
        "200":
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "204":
          content: {}
          description: No Content
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
      summary: updateUser
      tags:
      - Users
      x-codegen-request-body-name: user
      x-contentType: application/json
      x-accepts: '*/*'
  /users/set_password:
    post:
      operationId: setPasswordUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPassword'
        description: newPassword
        required: true
      responses:
        "200":
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/NewPassword'
          description: OK
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: setPassword
      tags:
      - Users
      x-codegen-request-body-name: newPassword
      x-contentType: application/json
      x-accepts: '*/*'
  /users/{id}:
    get:
      operationId: getUserUsingGET
      parameters:
      - description: id
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: getUser
      tags:
      - Users
      x-accepts: '*/*'
components:
  schemas:
    Ads:
      example:
        image: image
        author: 6
        price: 5
        pk: 1
        title: title
      properties:
        author:
          format: int32
          type: integer
        image:
          type: string
        pk:
          format: int32
          type: integer
        price:
          format: int32
          type: integer
        title:
          type: string
      title: Ads
      type: object
    AdsComment:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        author: 6
        pk: 1
        text: text
      properties:
        author:
          format: int32
          type: integer
        createdAt:
          format: date-time
          type: string
        pk:
          format: int32
          type: integer
        text:
          type: string
      title: AdsComment
      type: object
    CreateAds:
      example:
        image: image
        price: 6
        description: description
        pk: 0
        title: title
      properties:
        description:
          type: string
        image:
          type: string
        pk:
          format: int32
          type: integer
        price:
          format: int32
          type: integer
        title:
          type: string
      title: CreateAds
      type: object
    CreateUser:
      example:
        firstName: firstName
        lastName: lastName
        password: password
        phone: phone
        email: email
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
        phone:
          type: string
      title: CreateUser
      type: object
    FullAds:
      example:
        image: image
        authorLastName: authorLastName
        authorFirstName: authorFirstName
        phone: phone
        price: 6
        description: description
        pk: 0
        title: title
        email: email
      properties:
        authorFirstName:
          type: string
        authorLastName:
          type: string
        description:
          type: string
        email:
          type: string
        image:
          type: string
        phone:
          type: string
        pk:
          format: int32
          type: integer
        price:
          format: int32
          type: integer
        title:
          type: string
      title: FullAds
      type: object
    LoginReq:
      example:
        password: password
        username: username
      properties:
        password:
          type: string
        username:
          type: string
      title: LoginReq
      type: object
    NewPassword:
      example:
        newPassword: newPassword
        currentPassword: currentPassword
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
      title: NewPassword
      type: object
    RegReq:
      example:
        password: password
        role: USER
        username: username
      properties:
        password:
          type: string
          minLength: 8
        role:
          enum:
          - ADMIN
          - USER
          type: string
          example: USER
        username:
          type: string
          minLength: 4
          pattern: '^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$'
          example: test@mail.ru
      title: RegReq
      type: object
    ResponseWrapperAdsComment:
      example:
        count: 0
        results:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          author: 6
          pk: 1
          text: text
        - createdAt: 2000-01-23T04:56:07.000+00:00
          author: 6
          pk: 1
          text: text
      properties:
        count:
          format: int32
          type: integer
        results:
          items:
            $ref: '#/components/schemas/AdsComment'
          type: array
      title: ResponseWrapperAdsComment
      type: object
    ResponseWrapperAds:
      example:
        count: 0
        results:
        - image: image
          author: 6
          price: 5
          pk: 1
          title: title
        - image: image
          author: 6
          price: 5
          pk: 1
          title: title
      properties:
        count:
          format: int32
          type: integer
        results:
          items:
            $ref: '#/components/schemas/Ads'
          type: array
      title: ResponseWrapperAds
      type: object
    ResponseWrapperUser:
      example:
        count: 0
        results:
        - firstName: firstName
          lastName: lastName
          phone: phone
          id: 6
          email: email
        - firstName: firstName
          lastName: lastName
          phone: phone
          id: 6
          email: email
      properties:
        count:
          format: int32
          type: integer
        results:
          items:
            $ref: '#/components/schemas/User'
          type: array
      title: ResponseWrapperUser
      type: object
    User:
      example:
        firstName: firstName
        lastName: lastName
        phone: phone
        id: 6
        email: email
      properties:
        email:
          type: string
        firstName:
          type: string
        id:
          format: int32
          type: integer
        lastName:
          type: string
        phone:
          type: string
      title: User
      type: object
x-original-swagger-version: "2.0"

